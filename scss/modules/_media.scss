
//*/
// Generate media query
//
// The breakpoint mixin generate media query based on $breakpoint argument
// wich must be one of the key of global $breakpoints variable.
//
// Example:
// <code>
// $breakpoints: (smartphone: 480, tablet: 768, large: 1280);
//
// body {
//   background: #eeeeee;
//
//   @include breakpoint(smartphone){ background: #cccccc; }
//   @include breakpoint(tablet){ background: #dddddd; }
//   @include breakpoint(large){ background: #ffffff; }
// }
// </code>
//
// will output:
//
// <code>
// body {
//   background: #dddddd;
// }
// @media only screen and (min-width: 0) and (max-width: 480px) {
//   body {
//     background: #999999;
//   }
// }
// @media only screen and (min-width: 480px) and (max-width: 768px) {
//   body {
//     background: #bbbbbb;
//   }
// }
// @media only screen and (min-width: 1280px) {
//   body {
//     background: #ffffff;
//   }
// }
// </code>
//
// @uses    global $breakpoints variable to get breakpoints map
// @param   string $breakpoint One of the key of the breakpoints map
// @return  string
//
//*/

@mixin breakpoint($breakpoint) {
  $i: 1;
  $bpl: length($breakpoints);
  $bpvalues: map-values($breakpoints);

  @each $breakpoint_key, $breakpoint_value in $breakpoints {

    @if $breakpoint == $breakpoint_key {

      @if $i == $bpl {

        @media only screen
        and (min-width : $breakpoint_value + "px") {
          @content;
        }

      } @else {

        @media only screen
        and (min-width: $breakpoint_value + "px")
        and (max-width : "#{nth($bpvalues, $i + 1)}px") {
          @content;
        }
      }
    }

    $i: $i + 1;
  }
}
