
//*/
// Generate media query
//
// The breakpoint mixin generate media query based on $breakpoint argument
// wich must be one of the key of global $breakpoints variable.
//
// Example:
// <code>
// $breakpoints: (smartphone: 480, tablet: 768, large: 1280);
//
// body {
//   background: #eeeeee;
//
//   @include breakpoint(smartphone){ background: #cccccc; }
//   @include breakpoint(tablet){ background: #dddddd; }
//   @include breakpoint(large){ background: #ffffff; }
// }
// </code>
//
// will output:
//
// <code>
// body {
//   background: #dddddd;
// }
// @media only screen and (min-width: 0) and (max-width: 480px) {
//   body {
//     background: #999999;
//   }
// }
// @media only screen and (min-width: 480px) and (max-width: 768px) {
//   body {
//     background: #bbbbbb;
//   }
// }
// @media only screen and (min-width: 1280px) {
//   body {
//     background: #ffffff;
//   }
// }
// </code>
//
// @uses    global $breakpoints variable to get breakpoints map
// @param   string $breakpoint One of the key of the breakpoints map
// @return  string
//
//*/

@mixin breakpoint($breakpoint_max, $breakpoint_min: false) {

    $bpl: length($breakpoints);
    $bpvalues: map-values($breakpoints);

    @if $breakpoint_min {

        $i: 1;

        @each $breakpoint_min_key, $breakpoint_min_value in $breakpoints {

            $j: 1;

            @each $breakpoint_max_key, $breakpoint_max_value in $breakpoints {

                @if $breakpoint_min == $breakpoint_min_key {

                    @if $breakpoint_max == $breakpoint_max_key {

                        @warn("i" + $i);
                        @warn("j" + $j);

                        @if $j == $bpl {

                            @media only screen
                            and (min-width: 0)
                            and (max-width : #{nth($bpvalues, $i)}px) {
                                @content;
                            }

                        } @else {

                            @media only screen
                            and (min-width: #{nth($bpvalues, $j + 1) + 1}px)
                            and (max-width : #{nth($bpvalues, $i)}px) {
                                @content;
                            }
                        }
                    }
                }

                $j: $j + 1;
            }
            $i: $i + 1;
        }

    } @else {

        @each $breakpoint_key, $breakpoint_value in $breakpoints {

            @if $breakpoint_max == $breakpoint_key {

                @media only screen
                and (max-width: $breakpoint_value + px) {
                    @content;
                }
            }
        }
    }

    $i: 0;
    $j: 0;
}
