@mixin grid {

  $breakpoints: $breakpoints !global;

  $columns: $grid-columns !global;
  $column-class: $column-class !global;
  $push-class: $push-class !global;
  $pull-class: $pull-class !global;
  $last-class: $last-class !global;

  @include grid-columns($columns, $column-class, $push-class, $pull-class, $last-class);

    @each $breakpoint_key, $breakpoint_value in $breakpoints {

      @include breakpoint($breakpoint_key){

        $breakpoint_char: str-slice($breakpoint_key, 0, 1);

        $bcolumn-class: #{$breakpoint_char + $column-class};
        $bpush-class: #{$breakpoint_char + $push-class};
        $bpull-class: #{$breakpoint_char + $pull-class};
        $blast-class: #{$breakpoint_char + $last-class};

        @include grid-columns($columns, $bcolumn-class, $bpush-class, $bpull-class, $blast-class);
      }
    }
}

@mixin grid-columns($columns, $column-class, $push-class, $pull-class, $last-class){

  //
  // Class that have common
  // properties for each column
  //
  %#{$column-class} {
    float: left;
    margin-right: $gutter;
  }

  //
  // Generating classes for the grid and
  // extending them of the %#{$column-class} class
  //

  .#{$column-class}0{
    width: auto;
    float: none;
    margin-right: 0;
  }

  @for $i from 1 through $columns{

    $column-class-full: #{$column-class}#{$i};
    $column-width: percentage($i / $columns);


    .#{$column-class-full}{
      width: $column-width;
      @extend %#{$column-class};
    }
  }

  .#{$push-class}0 {
    margin-left: 0;
  }

  @for $i from 1 through $columns{

    .#{$push-class}#{$i}{
      margin-left: percentage($i / $columns);
    }
  }

  .#{$pull-class}0 {
    margin-right: 0;
  }

  @for $i from 1 through $columns{

    .#{$pull-class}#{$i}{
      margin-right: percentage($i / $columns);
    }
  }

  //
  // Class for the last element
  //
  .#{$last-class} {
    float: right;
    margin-right: 0;
  }
}
